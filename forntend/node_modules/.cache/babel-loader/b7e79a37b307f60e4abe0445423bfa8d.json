{"ast":null,"code":"var _jsxFileName = \"/Users/Haseeb/im_seeb/Bootcamp2020/food-store/src/pages/sellerDashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Typography from \"@material-ui/core/Typography\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\"; //custom-hook\n\nimport useForm from \"../hooks/forms\";\nimport ItemDialog from \"../components/ItemDialog\";\nimport RestaurantInfo from \"../components/RestaurantInfo\";\nimport RestaurantItems from \"../components/RestaurantItems\";\nimport SearchBar from \"../components/SearchBar\";\nimport { addItem } from \"../redux/actions/dataActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({ ...theme.spreadThis,\n  button: {\n    backgroundColor: theme.palette.primary.main,\n    color: \"white\",\n    width: \"40%\",\n    margin: \"40px 0 0 30%\",\n    \"&:hover\": {\n      backgroundColor: \"#5a5c5a\"\n    }\n  }\n}));\nexport default function SellerDashboard() {\n  _s();\n\n  const classes = useStyles();\n  const sellerData = useSelector(state => state.auth);\n  const {\n    items\n  } = sellerData;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (items) {\n      setItemsState(items);\n      setFilteredItemsState(items);\n    }\n  }, [items]);\n  const [itemsState, setItemsState] = useState(items ? [] : null);\n  const [filteredItemsState, setFilteredItemsState] = useState(items ? [] : null);\n  const [open, setOpen] = useState(false);\n  const [image, setImage] = useState({});\n  const {\n    inputs,\n    handleInputChange\n  } = useForm({\n    title: \"\",\n    description: \"\",\n    price: \"\"\n  });\n\n  const handleFileSelect = event => {\n    setImage(event.target.files[0]);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    inputs.title = \"\";\n    inputs.description = \"\";\n    inputs.price = \"\";\n    setImage(null);\n    setOpen(false);\n  };\n\n  const handleSubmit = () => {\n    const itemData = new FormData();\n    itemData.append(\"image\", image);\n    itemData.append(\"title\", inputs.title);\n    itemData.append(\"description\", inputs.description);\n    itemData.append(\"price\", inputs.price);\n    dispatch(addItem(itemData)); // eslint-disable-next-line\n\n    handleClose();\n  };\n\n  const handleSearch = value => {\n    // Variable to hold the original version of the list\n    let currentList = []; // Variable to hold the filtered list before putting into state\n\n    let newList = []; // If the search bar isn't empty\n\n    if (value !== \"\") {\n      // Assign the original list to currentList\n      currentList = itemsState;\n      newList = currentList.filter(item => {\n        const lc = item.title.toLowerCase();\n        const filter = value.toLowerCase();\n        return lc.includes(filter);\n      });\n    } else {\n      // If the search bar is empty, set newList to original task list\n      newList = itemsState;\n    } // Set the filtered state based on what our rules added to newList\n\n\n    setFilteredItemsState(newList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(RestaurantInfo, { ...sellerData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      style: {\n        marginTop: 40\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h5\",\n          style: {\n            textAlign: \"center\",\n            marginBottom: 30\n          },\n          noWrap: true,\n          children: [\"Add, Edit, Delete Items in your Restaurant\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"img\",\n            \"aria-label\": \"burger\",\n            style: {\n              fontSize: 40\n            },\n            children: \"\\uD83C\\uDF5C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        children: /*#__PURE__*/_jsxDEV(SearchBar, {\n          page: \"items\",\n          handleSearch: handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RestaurantItems, {\n        items: filteredItemsState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      fullWidth: true,\n      className: classes.button,\n      onClick: handleOpen,\n      children: \"Add Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ItemDialog, {\n      open: open,\n      handleClose: handleClose,\n      handleSubmit: handleSubmit,\n      handleFileSelect: handleFileSelect,\n      inputs: inputs,\n      handleInputChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SellerDashboard, \"HRzK8agfDVsiMHXutvSKGo6b8Dg=\", false, function () {\n  return [useStyles, useSelector, useDispatch, useForm];\n});\n\n_c = SellerDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"SellerDashboard\");","map":{"version":3,"sources":["/Users/Haseeb/im_seeb/Bootcamp2020/food-store/src/pages/sellerDashboard.js"],"names":["React","useState","useEffect","useDispatch","useSelector","Typography","makeStyles","Button","Grid","useForm","ItemDialog","RestaurantInfo","RestaurantItems","SearchBar","addItem","useStyles","theme","spreadThis","button","backgroundColor","palette","primary","main","color","width","margin","SellerDashboard","classes","sellerData","state","auth","items","dispatch","setItemsState","setFilteredItemsState","itemsState","filteredItemsState","open","setOpen","image","setImage","inputs","handleInputChange","title","description","price","handleFileSelect","event","target","files","handleOpen","handleClose","handleSubmit","itemData","FormData","append","handleSearch","value","currentList","newList","filter","item","lc","toLowerCase","includes","marginTop","textAlign","marginBottom","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\n\n//custom-hook\nimport useForm from \"../hooks/forms\";\n\nimport ItemDialog from \"../components/ItemDialog\";\nimport RestaurantInfo from \"../components/RestaurantInfo\";\nimport RestaurantItems from \"../components/RestaurantItems\";\nimport SearchBar from \"../components/SearchBar\";\nimport { addItem } from \"../redux/actions/dataActions\";\n\nconst useStyles = makeStyles((theme) => ({\n  ...theme.spreadThis,\n  button: {\n    backgroundColor: theme.palette.primary.main,\n    color: \"white\",\n    width: \"40%\",\n    margin: \"40px 0 0 30%\",\n    \"&:hover\": {\n      backgroundColor: \"#5a5c5a\",\n    },\n  },\n}));\n\nexport default function SellerDashboard() {\n  const classes = useStyles();\n  const sellerData = useSelector((state) => state.auth);\n  const { items } = sellerData;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (items) {\n      setItemsState(items);\n      setFilteredItemsState(items);\n    }\n  }, [items]);\n\n  const [itemsState, setItemsState] = useState(items ? [] : null);\n  const [filteredItemsState, setFilteredItemsState] = useState(\n    items ? [] : null\n  );\n  const [open, setOpen] = useState(false);\n  const [image, setImage] = useState({});\n  const { inputs, handleInputChange } = useForm({\n    title: \"\",\n    description: \"\",\n    price: \"\",\n  });\n\n  const handleFileSelect = (event) => {\n    setImage(event.target.files[0]);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    inputs.title = \"\";\n    inputs.description = \"\";\n    inputs.price = \"\";\n    setImage(null);\n    setOpen(false);\n  };\n\n  const handleSubmit = () => {\n    const itemData = new FormData();\n    itemData.append(\"image\", image);\n    itemData.append(\"title\", inputs.title);\n    itemData.append(\"description\", inputs.description);\n    itemData.append(\"price\", inputs.price);\n    dispatch(addItem(itemData)); // eslint-disable-next-line\n    handleClose();\n  };\n\n  const handleSearch = (value) => {\n    // Variable to hold the original version of the list\n    let currentList = [];\n    // Variable to hold the filtered list before putting into state\n    let newList = [];\n\n    // If the search bar isn't empty\n    if (value !== \"\") {\n      // Assign the original list to currentList\n      currentList = itemsState;\n\n      newList = currentList.filter((item) => {\n        const lc = item.title.toLowerCase();\n        const filter = value.toLowerCase();\n        return lc.includes(filter);\n      });\n    } else {\n      // If the search bar is empty, set newList to original task list\n      newList = itemsState;\n    }\n    // Set the filtered state based on what our rules added to newList\n    setFilteredItemsState(newList);\n  };\n\n  return (\n    <>\n      <RestaurantInfo {...sellerData} />\n      <Grid container direction=\"row\" style={{ marginTop: 40 }}>\n        <Grid item xs={12} sm={1} />\n        <Grid item xs={12} sm={6}>\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n            style={{ textAlign: \"center\", marginBottom: 30 }}\n            noWrap\n          >\n            Add, Edit, Delete Items in your Restaurant&nbsp;&nbsp;\n            <span role=\"img\" aria-label=\"burger\" style={{ fontSize: 40 }}>\n              🍜\n            </span>\n          </Typography>\n        </Grid>\n        <Grid item xs={12} sm={4}>\n          <SearchBar page=\"items\" handleSearch={handleSearch} />\n        </Grid>\n        <Grid item xs={12} sm={1} />\n        <RestaurantItems items={filteredItemsState} />\n      </Grid>\n      <Button fullWidth className={classes.button} onClick={handleOpen}>\n        Add Item\n      </Button>\n      <ItemDialog\n        open={open}\n        handleClose={handleClose}\n        handleSubmit={handleSubmit}\n        handleFileSelect={handleFileSelect}\n        inputs={inputs}\n        handleInputChange={handleInputChange}\n      />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}