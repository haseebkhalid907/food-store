{"ast":null,"code":"var _jsxFileName = \"/Users/Haseeb/im_seeb/Bootcamp2020/food-store/src/components/ItemDialog.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Typography from \"@material-ui/core/Typography\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({ ...theme.spreadThis,\n  button: {\n    backgroundColor: theme.palette.primary.main,\n    color: \"white\",\n    width: \"40%\",\n    margin: \"40px 0 0 30%\",\n    \"&:hover\": {\n      backgroundColor: \"#5a5c5a\"\n    }\n  }\n}));\nexport default function SellerDashboard(props) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    open,\n    handleClose,\n    handleSubmit,\n    inputs,\n    handleInputChange,\n    handleFileSelect\n  } = props;\n  const {\n    errors\n  } = useSelector(state => state.UI);\n  const {\n    message,\n    errors: errorsItem\n  } = errors || {};\n  let imageError;\n  let titleError;\n  let descError;\n  let priceError;\n\n  if (message) {\n    if (message.includes(\"Upload an image\")) imageError = message;\n  }\n\n  if (errorsItem) {\n    for (let error of errorsItem) {\n      if (error.msg.includes(\"Title needs to be\")) titleError = error.msg;\n      if (error.msg.includes(\"Description cannot\")) descError = error.msg;\n      if (error.msg.includes(\"Price cannot\")) priceError = error.msg;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: handleClose,\n    fullWidth: true,\n    maxWidth: \"sm\",\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Enter details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: \"title\",\n          label: \"Title\",\n          placeholder: \"Name of your Item\",\n          className: classes.textField,\n          value: inputs.title,\n          onChange: handleInputChange,\n          helperText: titleError,\n          error: titleError ? true : false,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"description\",\n          label: \"Description\",\n          placeholder: \"Spicy, non-veg, Basil leaves\",\n          className: classes.textField,\n          value: inputs.description,\n          onChange: handleInputChange,\n          helperText: descError,\n          error: descError ? true : false,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"price\",\n          label: \"Price\",\n          placeholder: \"Price of your Item\",\n          className: classes.textField,\n          type: \"number\",\n          value: inputs.price,\n          onChange: handleInputChange,\n          helperText: priceError,\n          error: priceError ? true : false,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          component: \"p\",\n          style: {\n            margin: \"10px 10px 2px 10px\"\n          },\n          children: \"Select an Image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          accept: \"image/*\",\n          className: classes.uploadImages,\n          id: \"raised-button-file\",\n          type: \"file\",\n          onChange: handleFileSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), imageError && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          component: \"p\",\n          style: {\n            margin: \"4px 10px 2px 10px\",\n            color: \"#f44336\"\n          },\n          children: \"Upload an Image as well\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClose,\n        style: {\n          color: \"#c70f02\"\n        },\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmit,\n        color: \"primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SellerDashboard, \"J+JL0KmcLfvtc4pinNstGXg+wA4=\", false, function () {\n  return [useStyles, useSelector];\n});\n\n_c = SellerDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"SellerDashboard\");","map":{"version":3,"sources":["/Users/Haseeb/im_seeb/Bootcamp2020/food-store/src/components/ItemDialog.js"],"names":["React","useSelector","Typography","makeStyles","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","useStyles","theme","spreadThis","button","backgroundColor","palette","primary","main","color","width","margin","SellerDashboard","props","classes","open","handleClose","handleSubmit","inputs","handleInputChange","handleFileSelect","errors","state","UI","message","errorsItem","imageError","titleError","descError","priceError","includes","error","msg","textField","title","description","price","uploadImages"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nconst useStyles = makeStyles((theme) => ({\n  ...theme.spreadThis,\n  button: {\n    backgroundColor: theme.palette.primary.main,\n    color: \"white\",\n    width: \"40%\",\n    margin: \"40px 0 0 30%\",\n    \"&:hover\": {\n      backgroundColor: \"#5a5c5a\",\n    },\n  },\n}));\n\nexport default function SellerDashboard(props) {\n  const classes = useStyles();\n  const {\n    open,\n    handleClose,\n    handleSubmit,\n    inputs,\n    handleInputChange,\n    handleFileSelect,\n  } = props;\n  const { errors } = useSelector((state) => state.UI);\n\n  const { message, errors: errorsItem } = errors || {};\n\n  let imageError;\n  let titleError;\n  let descError;\n  let priceError;\n\n  if (message) {\n    if (message.includes(\"Upload an image\")) imageError = message;\n  }\n\n  if (errorsItem) {\n    for (let error of errorsItem) {\n      if (error.msg.includes(\"Title needs to be\")) titleError = error.msg;\n      if (error.msg.includes(\"Description cannot\")) descError = error.msg;\n      if (error.msg.includes(\"Price cannot\")) priceError = error.msg;\n    }\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose} fullWidth maxWidth=\"sm\">\n      <DialogTitle>Enter details</DialogTitle>\n      <DialogContent>\n        <form>\n          <TextField\n            name=\"title\"\n            label=\"Title\"\n            placeholder=\"Name of your Item\"\n            className={classes.textField}\n            value={inputs.title}\n            onChange={handleInputChange}\n            helperText={titleError}\n            error={titleError ? true : false}\n            fullWidth\n          />\n          <TextField\n            name=\"description\"\n            label=\"Description\"\n            placeholder=\"Spicy, non-veg, Basil leaves\"\n            className={classes.textField}\n            value={inputs.description}\n            onChange={handleInputChange}\n            helperText={descError}\n            error={descError ? true : false}\n            fullWidth\n          />\n          <TextField\n            name=\"price\"\n            label=\"Price\"\n            placeholder=\"Price of your Item\"\n            className={classes.textField}\n            type=\"number\"\n            value={inputs.price}\n            onChange={handleInputChange}\n            helperText={priceError}\n            error={priceError ? true : false}\n            fullWidth\n          />\n          <Typography\n            variant=\"body2\"\n            component=\"p\"\n            style={{ margin: \"10px 10px 2px 10px\" }}\n          >\n            Select an Image:\n          </Typography>\n          <input\n            accept=\"image/*\"\n            className={classes.uploadImages}\n            id=\"raised-button-file\"\n            type=\"file\"\n            onChange={handleFileSelect}\n          />\n          {imageError && (\n            <Typography\n              variant=\"body2\"\n              component=\"p\"\n              style={{ margin: \"4px 10px 2px 10px\", color: \"#f44336\" }}\n            >\n              Upload an Image as well\n            </Typography>\n          )}\n        </form>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} style={{ color: \"#c70f02\" }}>\n          Cancel\n        </Button>\n        <Button onClick={handleSubmit} color=\"primary\">\n          Submit\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}