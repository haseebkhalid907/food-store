{"ast":null,"code":"var _jsxFileName = \"/Users/Haseeb/im_seeb/Bootcamp2020/food-store/src/pages/login.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\"; //material-ui\n\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport hamBurgerIcon from \"../images/hamburger.jpg\"; //custom-hook\n\nimport useForm from \"../hooks/forms\";\nimport { loginAction } from \"../redux/actions/authActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({ ...theme.spreadThis,\n  title: {\n    margin: \"10px 0px 10px 0px\"\n  },\n  hamBurger: {\n    height: 200,\n    width: 240\n  }\n}));\nexport default function Login() {\n  _s();\n\n  const classes = useStyles();\n  const {\n    loading,\n    serverError,\n    errors,\n    signUpSuccess\n  } = useSelector(state => state.UI);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const loginHandle = props => {\n    const userData = {\n      email: inputs.email,\n      password: inputs.password\n    };\n    dispatch(loginAction(userData, history));\n  };\n\n  const {\n    inputs,\n    handleInputChange,\n    handleSubmit\n  } = useForm({\n    email: \"\",\n    password: \"\"\n  }, loginHandle);\n  let incorrectCredentialsError = null;\n  let verifyEmailError = null;\n\n  if (errors) {\n    if (errors.includes(\"Invalid email/password\")) incorrectCredentialsError = errors;\n    if (errors.includes(\"Verify your email\")) verifyEmailError = errors;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: classes.form,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sm: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sm: true,\n      style: {\n        marginBottom: 34\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: hamBurgerIcon,\n        alt: \"hamBurger\",\n        className: classes.hamBurger\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        className: classes.title,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        noValidate: true,\n        onSubmit: handleSubmit,\n        children: [signUpSuccess && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          className: classes.customSuccess,\n          children: \"Account registered successfully, please verify your Email before logging-in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"email\",\n          name: \"email\",\n          label: \"Email\",\n          className: classes.textField,\n          onChange: handleInputChange,\n          value: inputs.email,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"password\",\n          name: \"password\",\n          type: \"password\",\n          label: \"Password\",\n          className: classes.textField,\n          onChange: handleInputChange,\n          value: inputs.password,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), serverError && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          className: classes.customError,\n          children: \"server error, please try again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), verifyEmailError && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          className: classes.customError,\n          children: verifyEmailError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), incorrectCredentialsError && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          className: classes.customError,\n          children: incorrectCredentialsError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.button,\n          disabled: loading,\n          children: [\"Login\", loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 30,\n            className: classes.progress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: classes.small,\n          children: [\"don't have an account ? sign up \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/register\",\n            children: \"here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      sm: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"/UcG2VfyOI1EAsnnKBli9a9CfLo=\", false, function () {\n  return [useStyles, useSelector, useDispatch, useHistory, useForm];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/Haseeb/im_seeb/Bootcamp2020/food-store/src/pages/login.js"],"names":["React","useHistory","Link","useDispatch","useSelector","makeStyles","Grid","Typography","TextField","Button","CircularProgress","hamBurgerIcon","useForm","loginAction","useStyles","theme","spreadThis","title","margin","hamBurger","height","width","Login","classes","loading","serverError","errors","signUpSuccess","state","UI","dispatch","history","loginHandle","props","userData","email","inputs","password","handleInputChange","handleSubmit","incorrectCredentialsError","verifyEmailError","includes","form","marginBottom","customSuccess","textField","customError","button","progress","small"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n//material-ui\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport hamBurgerIcon from \"../images/hamburger.jpg\";\n\n//custom-hook\nimport useForm from \"../hooks/forms\";\nimport { loginAction } from \"../redux/actions/authActions\";\n\nconst useStyles = makeStyles((theme) => ({\n  ...theme.spreadThis,\n  title: {\n    margin: \"10px 0px 10px 0px\",\n  },\n  hamBurger: {\n    height: 200,\n    width: 240,\n  },\n}));\n\nexport default function Login() {\n  const classes = useStyles();\n\n  const { loading, serverError, errors, signUpSuccess } = useSelector(\n    (state) => state.UI\n  );\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const loginHandle = (props) => {\n    const userData = {\n      email: inputs.email,\n      password: inputs.password,\n    };\n    dispatch(loginAction(userData, history));\n  };\n\n  const { inputs, handleInputChange, handleSubmit } = useForm(\n    {\n      email: \"\",\n      password: \"\",\n    },\n    loginHandle\n  );\n\n  let incorrectCredentialsError = null;\n  let verifyEmailError = null;\n  if (errors) {\n    if (errors.includes(\"Invalid email/password\"))\n      incorrectCredentialsError = errors;\n    if (errors.includes(\"Verify your email\")) verifyEmailError = errors;\n  }\n\n  return (\n    <Grid container className={classes.form}>\n      <Grid item sm />\n      <Grid item sm style={{ marginBottom: 34 }}>\n        <img\n          src={hamBurgerIcon}\n          alt=\"hamBurger\"\n          className={classes.hamBurger}\n        />\n        <Typography variant=\"h3\" className={classes.title}>\n          Login\n        </Typography>\n        <form noValidate onSubmit={handleSubmit}>\n          {signUpSuccess && (\n            <Typography variant=\"body2\" className={classes.customSuccess}>\n              Account registered successfully, please verify your Email before\n              logging-in\n            </Typography>\n          )}\n          <TextField\n            id=\"email\"\n            name=\"email\"\n            label=\"Email\"\n            className={classes.textField}\n            onChange={handleInputChange}\n            value={inputs.email}\n            fullWidth\n          />\n          <TextField\n            id=\"password\"\n            name=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            className={classes.textField}\n            onChange={handleInputChange}\n            value={inputs.password}\n            fullWidth\n          />\n          {serverError && (\n            <Typography variant=\"body2\" className={classes.customError}>\n              {\"server error, please try again\"}\n            </Typography>\n          )}\n\n          {verifyEmailError && (\n            <Typography variant=\"body2\" className={classes.customError}>\n              {verifyEmailError}\n            </Typography>\n          )}\n\n          {incorrectCredentialsError && (\n            <Typography variant=\"body2\" className={classes.customError}>\n              {incorrectCredentialsError}\n            </Typography>\n          )}\n\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n            disabled={loading}\n          >\n            Login\n            {loading && (\n              <CircularProgress size={30} className={classes.progress} />\n            )}\n          </Button>\n          <br />\n          <small className={classes.small}>\n            don't have an account ? sign up <Link to=\"/register\">here</Link>\n          </small>\n        </form>\n      </Grid>\n      <Grid item sm />\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}